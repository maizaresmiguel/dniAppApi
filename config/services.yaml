# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
#    app.supported_locales: ['en', 'es', 'fr']

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Form/Model'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.dni:
        class: App\Admin\DniAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Dni, controller: ~, manager_type: orm, group: admin, label: Documentos }

    admin.destino:
        class: App\Admin\DestinoAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Destino, controller: ~, manager_type: orm, group: admin, label: Destino }

# jwt modificando el payload
    App\EventListener\JWTCreatedListener:
        arguments: [ '@request_stack' ]
        tags:
            - {
                name: kernel.event_listener,
                event: lexik_jwt_authentication.on_jwt_created,
                method: onJWTCreated
            }

    App\EventListener\JWTDecodedListener:
        arguments: [ '@request_stack' ]
        tags:
            - {
                name: kernel.event_listener,
                event: lexik_jwt_authentication.on_jwt_decoded,
                method: onJWTDecoded
            }

       #modificacion de la respuesta logincheck
    App\EventListener\JWTAuthenticationSuccessListener:
        tags:
            - {
                name: kernel.event_listener,
                event: lexik_jwt_authentication.on_authentication_success,
                method: onAuthenticationSuccessResponse,
                priority: -1000,
            }